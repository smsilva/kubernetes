#!/bin/bash
k3d cluster create

docker pull silviosilva/mongoshell:2.0.2

k3d image import silviosilva/mongoshell:2.0.2

watch -n 3 kubectl get pods

kubectl create namespace wasp

kubectl config set-context \
  --current \
  --namespace wasp

export MONGODB_PROVIDER="default" # default | atlas | cosmosdb
export MONGODB_PASSWORD_URL_ENCODED=$(printf %s "${MONGODB_PASSWORD?}" | jq -sRr @uri)
export MONGODB_CONNECTION_STRING_DEFAULT="mongodb://${MONGODB_USERNAME?}:${MONGODB_PASSWORD_URL_ENCODED?}@${MONGODB_HOST?}/${MONGODB_DATABASE_NAME?}?directConnection=true&appName=mongoshell"
export MONGODB_CONNECTION_STRING_ATLAS="mongodb+srv://${MONGODB_USERNAME?}:${MONGODB_PASSWORD_URL_ENCODED?}@${MONGODB_HOST?}/${MONGODB_DATABASE_NAME?}?readPreference=secondaryPreferred&readPreferenceTags=workloadType:OPERATIONAL&retryWrites=true&w=majority&maxStalenessSeconds=90&maxIdleTimeMS=1500000&appName=mongoshell&minPoolSize=10"
export MONGODB_CONNECTION_STRING_COSMOSDB="mongodb://${MONGODB_USERNAME?}:${MONGODB_PASSWORD_URL_ENCODED?}@${MONGODB_HOST?}/?ssl=false&retrywrites=false&replicaSet=globaldb&maxIdleTimeMS=120000&appName=@${MONGODB_USERNAME?}@"
export MONGODB_PROVIDER_KEY="MONGODB_CONNECTION_STRING_${MONGODB_PROVIDER^^}"
export MONGODB_CONNECTION_STRING="${!MONGODB_PROVIDER_KEY}"

kubectl apply \
  --namespace wasp \
  --filename - <<EOF
---
apiVersion: v1
kind: Secret
metadata:
  name: mongoshell
type: Opaque
stringData:
  MONGODB_HOST:                 ${MONGODB_HOST?}
  MONGODB_DATABASE_NAME:        ${MONGODB_DATABASE_NAME?}
  MONGODB_USERNAME:             ${MONGODB_USERNAME?}
  MONGODB_PASSWORD:             ${MONGODB_PASSWORD?}
  MONGODB_PASSWORD_URL_ENCODED: ${MONGODB_PASSWORD_URL_ENCODED?}
  MONGODB_CONNECTION_STRING:    ${MONGODB_CONNECTION_STRING?}
EOF

kubectl apply -f pod.yaml && \
kubectl wait pod mongoshell \
  --for condition=Ready \
  --timeout 120s \
  --namespace wasp

kubectl exec -it mongoshell -- /bin/bash

mongosh "${MONGODB_CONNECTION_STRING?}" \
  --eval "show collections"

mongosh "${MONGODB_CONNECTION_STRING?}" \
  --quiet \
  --eval "show collections"

mongosh "${MONGODB_CONNECTION_STRING?}"

db.movies.find({})

db.movies.deleteMany({})

db.movies.insertOne({"title": "The silence of the lambs"})
